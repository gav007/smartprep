# /etc/nginx/sites-available/smartprep

server {
    # Listen on port 80 (HTTP) - Certbot will handle HTTPS setup
    listen 80;
    listen [::]:80;

    # Replace with your domain name
    server_name your-domain.com www.your-domain.com;

    # Optional: Redirect www to non-www (or vice-versa)
    # if ($host = www.your-domain.com) {
    #     return 301 https://your-domain.com$request_uri;
    # }

    # Location for Let's Encrypt ACME challenge (used by Certbot)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        # Allow all access for certbot verification
        allow all;
    }

    # All other requests are proxied to the Next.js app
    location / {
        proxy_pass http://localhost:3000; # Assuming your Next.js app runs on port 3000
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 600s; # Increase timeout for potentially long requests (like AI calls)
        proxy_send_timeout 600s;
    }

    # Optional: Block access to .git folder or other sensitive paths
    # location ~ /\.git {
    #     deny all;
    #     return 403;
    # }
}

# After setting up Certbot, it will typically create a new server block
# for HTTPS on port 443 and include SSL configurations.
# Example of what Certbot might add (DO NOT manually add this section before running Certbot):
#
# server {
#    listen 443 ssl http2;
#    listen [::]:443 ssl http2;
#    server_name your-domain.com www.your-domain.com;
#
#    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
#    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#
#    location / {
#        proxy_pass http://localhost:3000;
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection 'upgrade';
#        proxy_set_header Host $host;
#        proxy_cache_bypass $http_upgrade;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#        proxy_read_timeout 600s;
#        proxy_send_timeout 600s;
#    }
# }
